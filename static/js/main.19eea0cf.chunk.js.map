{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","contador","upgradeContador","className","Button","onClick","variant","e","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAkCeA,MA7Bf,WACE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,eAAhB,SAAgCF,MAElC,sBAAKE,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMH,EAAgBD,EAAW,IAAIK,QAAQ,UAA9D,sBAGA,cAACF,EAAA,EAAD,CACEC,QAAS,SAACE,GACRN,EAAW,EAAIC,EAAgBD,EAAW,GAAKM,EAAEC,kBAEnDF,QAAQ,UAJV,uBAQA,cAACF,EAAA,EAAD,CAAQC,QAAS,kBAAMH,EAAgB,IAAII,QAAQ,SAAnD,6BCdOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19eea0cf.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [contador, upgradeContador] = useState(0);\r\n\r\n  return (\r\n    <div className=\"fluid App gap-2\">\r\n      <h1 className=\"App-Titulo\">CONTADOR</h1>\r\n      <div className=\"App-Circle\">\r\n        <span className=\"App-Contador\">{contador}</span>\r\n      </div>\r\n      <div className=\"d-grid gap-2\">\r\n        <Button onClick={() => upgradeContador(contador + 1)} variant=\"primary\">\r\n          Aumentar\r\n        </Button>\r\n        <Button\r\n          onClick={(e) => {\r\n            contador > 0 ? upgradeContador(contador - 1) : e.preventDefault();\r\n          }}\r\n          variant=\"warning\"\r\n        >\r\n          Disminuir\r\n        </Button>\r\n        <Button onClick={() => upgradeContador(0)} variant=\"danger\">\r\n          Resetear\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}