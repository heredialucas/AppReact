{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","contador","upgradeContador","className","Button","onClick","variant","e","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAkCeA,MA7Bf,WACE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,eAAhB,SAAgCF,MAElC,sBAAKE,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMH,EAAgBD,EAAW,IAAIK,QAAQ,UAA9D,sBAGA,cAACF,EAAA,EAAD,CACEC,QAAS,SAACE,GACRN,EAAW,EAAIC,EAAgBD,EAAW,GAAKM,EAAEC,kBAEnDF,QAAQ,UAJV,uBAQA,cAACF,EAAA,EAAD,CAAQC,QAAS,kBAAMH,EAAgB,IAAII,QAAQ,SAAnD,6BCdOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.44caf6cb.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [contador, upgradeContador] = useState(0);\n\n  return (\n    <div className=\"fluid App gap-2\">\n      <h1 className=\"App-Titulo\">CONTADOR</h1>\n      <div className=\"App-Circle\">\n        <span className=\"App-Contador\">{contador}</span>\n      </div>\n      <div className=\"d-grid gap-2\">\n        <Button onClick={() => upgradeContador(contador + 1)} variant=\"primary\">\n          Aumentar\n        </Button>\n        <Button\n          onClick={(e) => {\n            contador > 0 ? upgradeContador(contador - 1) : e.preventDefault();\n          }}\n          variant=\"warning\"\n        >\n          Disminuir\n        </Button>\n        <Button onClick={() => upgradeContador(0)} variant=\"danger\">\n          Resetear\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}